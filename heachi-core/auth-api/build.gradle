plugins {
    id 'com.google.cloud.tools.jib' version '3.3.2'
}

bootJar {
    // 빌드된 Jar 파일명 지정
    archiveFileName = "heachi-auth-" + buildVersion + ".jar"
}

dependencies {
    // 내부 모듈
    implementation project(':heachi-support:common')
    implementation project(':heachi-support:logging')
    implementation project(':heachi-support:external-clients')
    implementation project(':heachi-domain-mysql')
    implementation project(':heachi-domain-redis')

    implementation 'org.springframework.boot:spring-boot-starter-web' // Spring Web
    implementation 'org.springframework.boot:spring-boot-starter-validation' // Bean Validation
    implementation 'org.springframework.boot:spring-boot-starter-security' // Spring Security

    // jwt 라이브러리 추가
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Swagger
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0")

    testCompileOnly project(':heachi-support:common')
    testCompileOnly project(':heachi-support:logging')
    testCompileOnly project(':heachi-domain-mysql')
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

jib {
    from {
        image = 'eclipse-temurin:17-jre' // https://github.com/GoogleContainerTools/jib/issues/3483
        platforms {
            platform {
                architecture = "amd64"
                os = "linux"
            }
            platform {
                architecture = 'arm64'
                os = 'linux'
            }
        }
    }
    to {
        image = 'ghdcksgml1/heachi-auth'
        tags = [buildVersion, "latest"]
        auth {
            username = dockerUsername
            password = dockerPassword
        }
    }
    container {

        entrypoint = ['java', '-Dspring.profiles.active=prod', '-Duser.timezone=Aisa/Seoul', '-jar', 'heachi-auth-' + buildVersion + '.jar']
        jvmFlags = ['-Xms2048m', '-Xmx2048m', '-Xdebug', '-XshowSettings:vm', '-XX:+UnlockExperimentalVMOptions', '-XX:+UseContainerSupport']
        ports = ['8080']
        environment = [SPRING_OUTPUT_ANSI_ENABLED: "ALWAYS"]

        creationTime = 'USE_CURRENT_TIMESTAMP'
        format = 'Docker'
    }

    // 어디 폴더로 부터 가져올지
    extraDirectories {
        paths {
            path {
                from = file('build/libs')
            }
        }
    }
}

bootJar.enabled = true
jar.enabled = false